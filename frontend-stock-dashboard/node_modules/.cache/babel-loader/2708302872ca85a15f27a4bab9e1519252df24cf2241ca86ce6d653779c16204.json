{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thega\\\\OneDrive\\\\Desktop\\\\Coding Projects\\\\Real-Time-Stock-Dashboard\\\\frontend-stock-dashboard\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport StockButton from \"./components/StockButton\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Keep Track of Ticker Symbol Input\n  const [tickerSymbol, setTicker] = useState(\"\");\n\n  // Keep Track of Current Watchlist\n  const [watchlist, setWatchlist] = useState([]);\n\n  // Keep Track of Selected Stock\n  const [currentStock, setCurrentStock] = useState(\"\");\n\n  // Keep Track of Current Stock Price\n  const [StockPrice, setStockPrice] = useState();\n\n  // Event handler to update the state when the input changes\n  const handleInputChange = event => {\n    setTicker(event.target.value);\n    console.log(event.target.value);\n  };\n\n  // Event Handler to Set Selected Stock\n  const handleSelectedStock = value => {\n    setCurrentStock(value);\n    const RequestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ticker: value\n      })\n    };\n    fetch(\"http://localhost:8000/get_current_stock_price\", RequestOptions).then(res => {\n      return res.json();\n    });\n  };\n\n  // Event handler to submit the ticker\n  const SubmitNewTicker = () => {\n    const RequestOptions = {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ticker: tickerSymbol\n      })\n    };\n    fetch(\"http://localhost:8000/add_ticker_symbol\", RequestOptions);\n    setTicker(\"\");\n    fetch(\"http://localhost:8000/get_watchlist\").then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n      setWatchlist(res.stocks);\n    });\n    console.log(watchlist);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"WatchListContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"WatchList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ticker Watch List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), watchlist.map((item, index) => /*#__PURE__*/_jsxDEV(StockButton, {\n          stock_symbol: item[\"id\"],\n          active: currentStock === item[\"id\"] ? true : false,\n          onClick: () => handleSelectedStock(item[\"id\"])\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"FormContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Ticker Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"TickerSymbolInput\",\n          type: \"text\",\n          value: tickerSymbol,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: SubmitNewTicker,\n          children: \"Add New Ticker Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"StockDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3mE97ywLj9btzqfKVf1EanQTTV0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StockButton","jsxDEV","_jsxDEV","App","_s","tickerSymbol","setTicker","watchlist","setWatchlist","currentStock","setCurrentStock","StockPrice","setStockPrice","handleInputChange","event","target","value","console","log","handleSelectedStock","RequestOptions","method","headers","body","JSON","stringify","ticker","fetch","then","res","json","SubmitNewTicker","stocks","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","stock_symbol","active","onClick","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/thega/OneDrive/Desktop/Coding Projects/Real-Time-Stock-Dashboard/frontend-stock-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\nimport StockButton from \"./components/StockButton\";\nimport \"./App.css\";\n\nfunction App() {\n  // Keep Track of Ticker Symbol Input\n  const [tickerSymbol, setTicker] = useState(\"\");\n\n  // Keep Track of Current Watchlist\n  const [watchlist, setWatchlist] = useState([]);\n\n  // Keep Track of Selected Stock\n  const [currentStock, setCurrentStock] = useState(\"\");\n\n  // Keep Track of Current Stock Price\n  const [StockPrice, setStockPrice] = useState();\n\n  // Event handler to update the state when the input changes\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setTicker(event.target.value);\n    console.log(event.target.value);\n  };\n\n  // Event Handler to Set Selected Stock\n  const handleSelectedStock = (value: string) => {\n    setCurrentStock(value);\n    const RequestOptions = {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ticker: value }),\n    };\n    fetch(\"http://localhost:8000/get_current_stock_price\", RequestOptions).then(\n      (res) => {\n        return res.json();\n      }\n    );\n  };\n\n  // Event handler to submit the ticker\n  const SubmitNewTicker = () => {\n    const RequestOptions = {\n      method: \"Post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ticker: tickerSymbol }),\n    };\n    fetch(\"http://localhost:8000/add_ticker_symbol\", RequestOptions);\n    setTicker(\"\");\n    fetch(\"http://localhost:8000/get_watchlist\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        console.log(res);\n        setWatchlist(res.stocks);\n      });\n    console.log(watchlist);\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"WatchListContainer\">\n        <div id=\"WatchList\">\n          <h1>Ticker Watch List</h1>\n          {watchlist.map((item, index) => (\n            <StockButton\n              key={index}\n              stock_symbol={item[\"id\"]}\n              active={currentStock === item[\"id\"] ? true : false}\n              onClick={() => handleSelectedStock(item[\"id\"])}\n            />\n          ))}\n        </div>\n        <div id=\"FormContainer\">\n          <h1>New Ticker Symbol</h1>\n          <input\n            id=\"TickerSymbolInput\"\n            type=\"text\"\n            value={tickerSymbol}\n            onChange={handleInputChange}\n          ></input>\n          <button onClick={SubmitNewTicker}>Add New Ticker Symbol</button>\n        </div>\n      </div>\n      <div id=\"StockDisplay\">\n        <h1></h1>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}